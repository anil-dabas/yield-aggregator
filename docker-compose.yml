name: yield-aggregator
services:
  app:
    build: .
    hostname: app
    ports:
      - "3000:3000"
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - NODE_ENV=production
      - KAFKAJS_NO_PARTITIONER_WARNING=1
    volumes:
      - .:/app
    networks:
      - yield-network
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    hostname: frontend
    ports:
      - "3001:3001"
    depends_on:
      - app
    environment:
      - NODE_ENV=production
    volumes:
      - ./frontend:/app
    networks:
      - yield-network
  redis:
    image: redis:7.0
    hostname: redis
    ports:
      - "6379:6379"
    networks:
      - yield-network
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - yield-network
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka
    depends_on:
      zookeeper:
        condition: service_started
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - yield-network

networks:
  yield-network:
    driver: bridge